<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>

	<key>scopeName</key>
	<string>text.robot</string>

	<key>uuid</key>
	<string>a7fae509-bc8d-451e-b5fc-a47feb9d2a9e</string>

  <key>fileTypes</key>
  <array>
    <string>robot</string>
  </array>

	<key>name</key>
	<string>RobotFramework</string>

  <key>repository</key>
  <dict>
    <!-- # a comment -->
    <key>comment</key>
		<dict>
			<key>match</key>
			<string>(?:^ ?|\t+| {2,})(#.*)$</string>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>comment.line.robot</string>
        </dict>
      </dict>
		</dict>

    <!-- ${var}, @{var}, &{var} or %{var} -->
    <key>variables</key>
		<dict>
			<key>match</key>
			<string>(?:(?&lt;!^)(?&lt;!\\)|(?&lt;=\\\\))([$@&amp;%]\{)(?:(\d*?)|(.+?}*))(\})( ?=)?</string>

      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>constant.numeric.robot</string>
        </dict>

        <key>3</key>
        <dict>
          <key>name</key>
          <string>variable.other.robot</string>
        </dict>

        <key>4</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>5</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>
      </dict>
		</dict>


    <!-- parameters of [Arguments] -->
    <key>parameter</key>
		<dict>
			<key>match</key>
			<string>(?:(?&lt;!\\)|(?&lt;=\\\\))([$@&amp;]\{)(?:(.+?}*))(\})</string>

      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>variable.parameter.robot</string>
        </dict>

        <key>3</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>
      </dict>
		</dict>
    
    <!-- ... -->
    <key>line_continuation</key>
    <dict>
      <key>match</key>
      <string>^(\s*\.\.\.)(?= {2,}| ?\t+| ?$)</string>

      <key>name</key>
      <string>keyword.operator.robot</string>
    </dict>

    <!-- TODO: Separate into Documentation and [Documentation] -->
    <key>documentation</key>
		<dict>
			<key>begin</key>
			<string>(?i)^\s*(\[?)(Documentation)(\]?)(?= {2}| ?\t| ?$)</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>storage.type.method.robot</string>
        </dict>

        <key>3</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>
      </dict>

			<key>contentName</key>
			<string>string.unquoted.robot</string>

			<key>end</key>
			<string>^(?!\s*\.\.\.)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>
      </array>

		</dict>

    <!-- Settings in settings table, e.g. Library or Resource -->
    <key>settings_table_setting</key>
		<dict>
      <key>name</key>
      <string>meta.setting.robot</string>

      <!-- TODO: Create a separate repository entry for each of these for better control -->
      <key>begin</key>
      <string>(?i)^(Documentation|Force Tags|Default Tags|Test Timeout)(?= {2}| ?\t| ?$)</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>storage.type.setting.robot</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>constant.other.robot</string>

      <key>end</key>
      <string>^(?!\s*\.\.\.)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#variables</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>
      </array>
		</dict>

    <!-- Settings in settings table, e.g. Library or Resource -->
    <key>settings_table_setting_imports</key>
		<dict>
      <key>name</key>
      <string>meta.setting.robot</string>

      <!-- TODO: Create a separate repository entry for each of these for better control -->
      <key>begin</key>
      <string>(?i)^(Library|Resource|Variables|Metadata)(?: {2}| ?\t)*(.*?)(?= {2}| ?\t| ?$)</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>storage.type.setting.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>entity.other.inherited-class.robot</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>constant.other.robot</string>

      <key>end</key>
      <string>^(?!\s*\.\.\.)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#variables</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#named_argument</string>
        </dict>

      </array>
		</dict>

    <!-- Settings in settings table, e.g. Library or Resource -->
    <key>settings_table_setting_keywordCalls</key>
		<dict>
      <key>name</key>
      <string>meta.setting.robot</string>

      <!-- TODO: Create a separate repository entry for each of these for better control -->
      <key>begin</key>
      <string>(?i)^(Suite Setup|Suite Teardown|Test Setup|Test Teardown|Test Template)(?: {2}| ?\t)*(.*?)(?= {2}| ?\t| ?$)</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>storage.type.setting.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>entity.name.function.robot</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>constant.other.robot</string>

      <key>end</key>
      <string>^(?!\s*\.\.\.)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#variables</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#named_argument</string>
        </dict>

      </array>
		</dict>

    <!-- Either a user keyword or test case, only the name line -->
    <key>function_declaration</key>
		<dict>
      <key>begin</key>
      <string>^(?=[^ \t\*\n\|]+)</string>

      <key>contentName</key>
      <string>entity.name.type.robot</string>

      <key>end</key>
      <string>(?= {2}| ?\t| ?$)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#variables</string>
        </dict>
      </array>
		</dict>

    <!-- Tags in user keywords or test cases -->
    <key>tags</key>
		<dict>
      <key>begin</key>
      <string>^(?i)(?:\s)+(\[)(tags)(\])</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>storage.type.method.robot</string>
        </dict>

        <key>3</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>entity.name.tag.robot</string>

      <key>end</key>
      <string>^(?!\s*\.\.\.)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>
      </array>
		</dict>

    <!-- [Arguments] -->
    <key>keyword_arguments</key>
		<dict>
      <key>name</key>
      <string>meta.keyword.setting.robot</string>

      <key>begin</key>
      <string>^(?i)(?:\s)+(\[)(arguments)(\])</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>storage.type.method.robot</string>
        </dict>

        <key>3</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>constant.other.robot</string>

      <key>end</key>
      <string>^(?!\s*\.\.\.)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#parameter</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>
      </array>
		</dict>

    <!-- [Return] -->
    <key>keyword_return</key>
		<dict>
      <key>name</key>
      <string>meta.keyword.setting.robot</string>

      <key>begin</key>
      <string>^(?i)(?:\s)+(\[)(return)(\])</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>storage.type.method.robot</string>
        </dict>

        <key>3</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>constant.other.robot</string>

      <key>end</key>
      <string>^(?!\s*\.\.\.)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#variables</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>
      </array>
		</dict>

    <!-- [Timeout] -->
    <key>function_timeout</key>
		<dict>
      <key>name</key>
      <string>meta.keyword.setting.robot</string>

      <key>begin</key>
      <string>^(?i)(?:\s)+(\[)(timeout)(\])</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>storage.type.method.robot</string>
        </dict>

        <key>3</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>constant.other.robot</string>

      <key>end</key>
      <string>^(?!\s*\.\.\.)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#variables</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>
      </array>
		</dict>

    <!-- [Setup] -->
    <key>function_setup</key>
		<dict>
      <key>name</key>
      <string>meta.function.setting.robot</string>

      <key>begin</key>
      <string>(?i)^(?:\s)+(\[)(setup)(\])(?: {2}| ?\t| ?$)(?:\s)*(.*?)(?: {2}| ?\t| ?$)</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>storage.type.method.robot</string>
        </dict>

        <key>3</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>4</key>
        <dict>
          <key>name</key>
          <string>entity.name.function</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>constant.other.robot</string>

      <key>end</key>
      <string>^(?!\s*\.\.\.)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#variables</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>
      </array>
		</dict>

    <!-- [Teardown] -->
    <key>function_teardown</key>
		<dict>
      <key>name</key>
      <string>meta.function.setting.robot</string>

      <key>begin</key>
      <string>(?i)^(?:\s)+(\[)(teardown)(\])(?: {2}| ?\t| ?$)(?:\s)*(.*?)(?: {2}| ?\t| ?$)</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>storage.type.method.robot</string>
        </dict>

        <key>3</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>4</key>
        <dict>
          <key>name</key>
          <string>entity.name.function</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>constant.other.robot</string>

      <key>end</key>
      <string>^(?!\s*\.\.\.)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#variables</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>
      </array>
		</dict>

    <!-- [Template] -->
    <key>function_template</key>
		<dict>
      <key>name</key>
      <string>meta.function.setting.robot</string>

      <key>begin</key>
      <string>(?i)^(?:\s)+(\[)(template)(\])(?: {2}| ?\t| ?$)(?:\s)*(.*?)(?: {2}| ?\t| ?$)</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>storage.type.method.robot</string>
        </dict>

        <key>3</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>4</key>
        <dict>
          <key>name</key>
          <string>entity.name.function.robot</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>constant.other.robot</string>

      <key>end</key>
      <string>^(?!\s*\.\.\.)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>
      </array>
		</dict>

    <!-- Test case or user keyword step, i.e. call to other keyword -->
    <key>function_step</key>
		<dict>
      <key>name</key>
      <string>entity.name.function.robot</string>

      <key>begin</key>
      <string>^(?!(?:\s)+(?:(?=[$\[@&amp;%])|(?=(?:(?:FOR)|(?:END)))))(?:\s)+</string>

      <key>contentName</key>
      <string>entity.name.function.robot</string>

      <key>end</key>
      <string>(?= {2}| ?\t| ?$)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#variables</string>
        </dict>
      </array>
		</dict>

    <!-- [Variable assignment from keywords] -->
    <key>function_step_assign</key>
		<dict>
      <key>name</key>
      <string>meta.function.setting.robot</string>

      <key>begin</key>
      <string>^(?:\s)+(?:(?=[$@&amp;]))</string>

      <key>contentName</key>
      <string>constant.other.robot</string>

      <key>end</key>
      <string>(?:( ?=)?(?: {2,}| ?\t+| ?$)([^$@&amp; ].*?)(?: {2,}| ?\t+| ?$))</string>

      <key>endCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>entity.name.function.robot</string>
        </dict>
      </dict>

      <key>patterns</key>
      <array>

        <dict>
          <key>include</key>
          <string>#parameter</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>
      </array>
		</dict>

    <!-- named Arguments -->
    <key>named_argument</key>
		<dict>
      <key>name</key>
      <string>meta.named.argument.robot</string>

      <key>match</key>
      <string>((?<=[\s|])[^ |\t=]*)((?<!\\)=)</string>

      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>variable.language.robot</string>
        </dict>

        <key>2</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>
      </dict>
		</dict>

    <!-- variable assignment in variables section -->
    <key>variable_assign</key>
		<dict>
      <key>name</key>
      <string>meta.variable.setting.robot</string>

      <key>begin</key>
      <string>^(?=[$@&amp;])</string>

      <key>contentName</key>
      <string>constant.other.robot</string>

      <key>end</key>
      <string>(=)?(?: {2}| ?\t)</string>

      <key>endCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.operator.robot</string>
        </dict>
      </dict>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#parameter</string>
        </dict>
      </array>
		</dict>
  
    <!-- FOR -->
    <key>for_loop</key>
		<dict>
      <key>name</key>
      <string>meta.function.setting.robot</string>

      <key>begin</key>
      <string>^(?:\s)+(FOR)</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.control.robot</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>constant.other.robot</string>

      <key>end</key>
      <string>(IN ENUMERATE|IN RANGE|IN ZIP|IN|$)</string>

      <key>endCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.control.robot</string>
        </dict>
      </dict>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#parameter</string>
        </dict>
      </array>
		</dict>

    <!-- END -->
    <key>end_loop</key>
    <dict>
      <key>match</key>
      <string>^(\s*END)(?= {2,}| ?\t+| ?$)</string>

      <key>name</key>
      <string>keyword.control.robot</string>
    </dict>

    <!-- *** Settings *** -->
    <key>settings_table</key>
		<dict>
			<key>name</key>
			<string>meta.table.settings.robot</string>

			<key>begin</key>
			<string>(?i)^(\*+\s*settings?[\s*].*)</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>entity.name.table.robot</string>
        </dict>
      </dict>

			<key>end</key>
			<string>^(?=\*)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#variables</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#documentation</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#settings_table_setting</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#settings_table_setting_keywordCalls</string>
        </dict>
       
        <dict>
          <key>include</key>
          <string>#settings_table_setting_imports</string>
        </dict>
        
      </array>

		</dict>

    <!-- *** Variables *** -->
    <key>variables_table</key>
		<dict>
			<key>name</key>
			<string>meta.table.variables.robot</string>

			<key>begin</key>
			<string>(?i)^(\*+\s*variables?[\s*].*)</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>entity.name.table.robot</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>constant.other.robot</string>

			<key>end</key>
			<string>^(?=\*)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#variables</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#variable_assign</string>
        </dict>
      </array>

		</dict>

    <!-- *** Keywords *** -->
    <key>keywords_table</key>
		<dict>
			<key>name</key>
			<string>meta.table.keywords.robot</string>

			<key>begin</key>
			<string>(?i)^(\*+\s*(user )?keywords?[\s*].*)</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>entity.name.table.robot</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>constant.other.robot</string>

			<key>end</key>
			<string>^(?=\*)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#function_declaration</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#documentation</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#variables</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#tags</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#keyword_arguments</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#keyword_return</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#function_timeout</string>
        </dict>

        <!-- Setup, Teardown and Template are illegal for keywords but highlight them anyway  -->
        <dict>
          <key>include</key>
          <string>#function_setup</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#function_teardown</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#function_template</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#function_step</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#function_step_assign</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#named_argument</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#for_loop</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#end_loop</string>
        </dict>
      </array>

		</dict>

    <!-- *** Test Cases *** -->
    <key>test_cases_table</key>
		<dict>
			<key>name</key>
			<string>meta.table.testcases.robot</string>

			<key>begin</key>
			<string>(?i)^(\*+\s*test ?cases?[\s*].*)</string>

      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>entity.name.table.robot</string>
        </dict>
      </dict>

      <key>contentName</key>
      <string>constant.other.robot</string>

			<key>end</key>
			<string>^(?=\*)</string>

      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#function_declaration</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#documentation</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#comment</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#line_continuation</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#variables</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#tags</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#function_timeout</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#function_setup</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#function_teardown</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#function_template</string>
        </dict>

        <!-- Arguments and return are illegal for test cases but highlight them anyway  -->
        <dict>
          <key>include</key>
          <string>#keyword_eturn</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#keyword_arguments</string>
        </dict>
        
        <dict>
          <key>include</key>
          <string>#function_step</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#function_step_assign</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#named_argument</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#for_loop</string>
        </dict>

        <dict>
          <key>include</key>
          <string>#end_loop</string>
        </dict>
      </array>

		</dict>

  </dict>

	<key>patterns</key>
	<array>
    <dict>
      <key>include</key>
      <string>#comment</string>
    </dict>

    <dict>
      <key>include</key>
      <string>#variables</string>
    </dict>

    <dict>
      <key>include</key>
      <string>#documentation</string>
    </dict>

    <dict>
      <key>include</key>
      <string>#settings_table</string>
    </dict>

    <dict>
      <key>include</key>
      <string>#variables_table</string>
    </dict>

    <dict>
      <key>include</key>
      <string>#keywords_table</string>
    </dict>

    <dict>
      <key>include</key>
      <string>#test_cases_table</string>
    </dict>
	</array>
</dict>
</plist>
